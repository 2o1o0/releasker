/// Generated by https://quicktype.io
extern crate serde_json;
use serde_derive::{Deserialize, Serialize};

pub type Releases = Vec<Release>;

/// A release.
#[derive(Debug, Serialize, Deserialize)]
pub struct Release {
    #[serde(rename = "assets")]
    assets: Vec<ReleaseAsset>,

    #[serde(rename = "assets_url")]
    assets_url: String,

    /// A GitHub user.
    #[serde(rename = "author")]
    author: AuthorClass,

    #[serde(rename = "body")]
    body: Option<String>,

    #[serde(rename = "body_html")]
    body_html: Option<String>,

    #[serde(rename = "body_text")]
    body_text: Option<String>,

    #[serde(rename = "created_at")]
    created_at: String,

    /// The URL of the release discussion.
    #[serde(rename = "discussion_url")]
    discussion_url: Option<String>,

    /// true to create a draft (unpublished) release, false to create a published one.
    #[serde(rename = "draft")]
    draft: bool,

    #[serde(rename = "html_url")]
    html_url: String,

    #[serde(rename = "id")]
    id: i64,

    #[serde(rename = "mentions_count")]
    mentions_count: Option<i64>,

    #[serde(rename = "name")]
    pub name: Option<String>,

    #[serde(rename = "node_id")]
    node_id: String,

    /// Whether to identify the release as a prerelease or a full release.
    #[serde(rename = "prerelease")]
    prerelease: bool,

    #[serde(rename = "published_at")]
    published_at: Option<String>,

    #[serde(rename = "reactions")]
    reactions: Option<ReactionRollup>,

    /// The name of the tag.
    #[serde(rename = "tag_name")]
    pub tag_name: String,

    #[serde(rename = "tarball_url")]
    tarball_url: Option<String>,

    /// Specifies the commitish value that determines where the Git tag is created from.
    #[serde(rename = "target_commitish")]
    target_commitish: String,

    #[serde(rename = "upload_url")]
    upload_url: String,

    #[serde(rename = "url")]
    url: String,

    #[serde(rename = "zipball_url")]
    zipball_url: Option<String>,
}

/// Data related to a release.
#[derive(Debug, Serialize, Deserialize)]
pub struct ReleaseAsset {
    #[serde(rename = "browser_download_url")]
    browser_download_url: String,

    #[serde(rename = "content_type")]
    content_type: String,

    #[serde(rename = "created_at")]
    created_at: String,

    #[serde(rename = "download_count")]
    download_count: i64,

    #[serde(rename = "id")]
    id: i64,

    #[serde(rename = "label")]
    label: Option<String>,

    /// The file name of the asset.
    #[serde(rename = "name")]
    name: String,

    #[serde(rename = "node_id")]
    node_id: String,

    #[serde(rename = "size")]
    size: i64,

    /// State of the release asset.
    #[serde(rename = "state")]
    state: State,

    #[serde(rename = "updated_at")]
    updated_at: String,

    #[serde(rename = "uploader")]
    uploader: Option<SimpleUser>,

    #[serde(rename = "url")]
    url: String,
}

/// A GitHub user.
#[derive(Debug, Serialize, Deserialize)]
pub struct SimpleUser {
    #[serde(rename = "avatar_url")]
    avatar_url: String,

    #[serde(rename = "email")]
    email: Option<String>,

    #[serde(rename = "events_url")]
    events_url: String,

    #[serde(rename = "followers_url")]
    followers_url: String,

    #[serde(rename = "following_url")]
    following_url: String,

    #[serde(rename = "gists_url")]
    gists_url: String,

    #[serde(rename = "gravatar_id")]
    gravatar_id: Option<String>,

    #[serde(rename = "html_url")]
    html_url: String,

    #[serde(rename = "id")]
    id: i64,

    #[serde(rename = "login")]
    login: String,

    #[serde(rename = "name")]
    name: Option<String>,

    #[serde(rename = "node_id")]
    node_id: String,

    #[serde(rename = "organizations_url")]
    organizations_url: String,

    #[serde(rename = "received_events_url")]
    received_events_url: String,

    #[serde(rename = "repos_url")]
    repos_url: String,

    #[serde(rename = "site_admin")]
    site_admin: bool,

    #[serde(rename = "starred_at")]
    starred_at: Option<String>,

    #[serde(rename = "starred_url")]
    starred_url: String,

    #[serde(rename = "subscriptions_url")]
    subscriptions_url: String,

    #[serde(rename = "type")]
    simple_user_type: String,

    #[serde(rename = "url")]
    url: String,
}

/// A GitHub user.
#[derive(Debug, Serialize, Deserialize)]
pub struct AuthorClass {
    #[serde(rename = "avatar_url")]
    avatar_url: String,

    #[serde(rename = "email")]
    email: Option<String>,

    #[serde(rename = "events_url")]
    events_url: String,

    #[serde(rename = "followers_url")]
    followers_url: String,

    #[serde(rename = "following_url")]
    following_url: String,

    #[serde(rename = "gists_url")]
    gists_url: String,

    #[serde(rename = "gravatar_id")]
    gravatar_id: Option<String>,

    #[serde(rename = "html_url")]
    html_url: String,

    #[serde(rename = "id")]
    id: i64,

    #[serde(rename = "login")]
    login: String,

    #[serde(rename = "name")]
    name: Option<String>,

    #[serde(rename = "node_id")]
    node_id: String,

    #[serde(rename = "organizations_url")]
    organizations_url: String,

    #[serde(rename = "received_events_url")]
    received_events_url: String,

    #[serde(rename = "repos_url")]
    repos_url: String,

    #[serde(rename = "site_admin")]
    site_admin: bool,

    #[serde(rename = "starred_at")]
    starred_at: Option<String>,

    #[serde(rename = "starred_url")]
    starred_url: String,

    #[serde(rename = "subscriptions_url")]
    subscriptions_url: String,

    #[serde(rename = "type")]
    simple_user_type: String,

    #[serde(rename = "url")]
    url: String,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct ReactionRollup {
    #[serde(rename = "+1")]
    the_1: i64,

    #[serde(rename = "-1")]
    reaction_rollup_1: i64,

    #[serde(rename = "confused")]
    confused: i64,

    #[serde(rename = "eyes")]
    eyes: i64,

    #[serde(rename = "heart")]
    heart: i64,

    #[serde(rename = "hooray")]
    hooray: i64,

    #[serde(rename = "laugh")]
    laugh: i64,

    #[serde(rename = "rocket")]
    rocket: i64,

    #[serde(rename = "total_count")]
    total_count: i64,

    #[serde(rename = "url")]
    url: String,
}

/// State of the release asset.
#[derive(Debug, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "open")]
    Open,

    #[serde(rename = "uploaded")]
    Uploaded,
}
